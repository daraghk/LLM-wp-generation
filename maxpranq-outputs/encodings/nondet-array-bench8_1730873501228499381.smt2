(declare-var FH0 Int)
(declare-var FH1 (Array Int Int))
(declare-var FH2 (Array Int Int))
(declare-var FH3 (Array Int Int))
(declare-var FH4 Int)
(declare-var FH5 Int)
(declare-var FH6 (Array Int Int))
(declare-var FH7 (Array Int Int))
(declare-var FH8 (Array Int Int))
(declare-var FH4P Int)
(declare-var FH5P Int)
(declare-var FH6P (Array Int Int))
(declare-var FH7P (Array Int Int))
(declare-var FH8P (Array Int Int))
(declare-var i1 Int)
(declare-rel pre (Int (Array Int  Int ) (Array Int  Int ) (Array Int  Int ) )) 
(declare-rel inv (Int Int (Array Int  Int ) (Array Int  Int ) (Array Int  Int ) )) 
(declare-rel fail())

(rule (=> (and (= 0 FH4P) (= FH1 FH6P) (= FH2 FH7P) (= FH3 FH8P) (= FH0 FH5P) (or (exists ((i1 Int)) (and (<= 0 i1) (>= i1 0) (< i1 FH0) (distinct (select FH1 i1) (select FH2 i1)))) (exists ((i1 Int)) (and (<= 0 i1) (>= i1 0) (< i1 FH0) (distinct (- (select FH3 i1)) 0))))) (inv FH4P FH5P FH6P FH7P FH8P)))
(rule (=> (and (= (store FH6 FH4 (select FH6 FH4)) FH6P) (= FH4P (+ FH4 1)) (< FH4 FH5) (= FH5 FH5P) (= (store FH8 FH4 (select FH7 FH4)) FH8P) (= (store FH7 FH4 (select FH7 FH4)) FH7P) (inv FH4 FH5 FH6 FH7 FH8)) (inv FH4P FH5P FH6P FH7P FH8P)))
(rule (=> (and (= FH4P (+ FH4 1)) (< FH4 FH5) (= FH5 FH5P) (= (store FH7 FH4 (select FH7 FH4)) FH7P) (= (store FH8 FH4 (select FH8 FH4)) FH8P) (= (store FH6 FH4 (+ (select FH7 FH4) (- (select FH8 FH4)))) FH6P) (inv FH4 FH5 FH6 FH7 FH8)) (inv FH4P FH5P FH6P FH7P FH8P)))
(rule (=> (and (>= FH4 FH5) (inv FH4 FH5 FH6 FH7 FH8) (forall ((i1 Int)) (or (> 0 i1) (= (select FH6 i1) (select FH7 i1)) (>= i1 FH5)))) fail))
(query fail)

