(declare-var FH0 (Array Int Int))
(declare-var FH1 (Array Int Int))
(declare-var FH2 (Array Int Int))
(declare-var FH3 Int)
(declare-var FH4 Int)
(declare-var FH5 (Array Int Int))
(declare-var FH6 (Array Int Int))
(declare-var FH7 (Array Int Int))
(declare-var FH8 Int)
(declare-var FH9 Int)
(declare-var FH5P (Array Int Int))
(declare-var FH6P (Array Int Int))
(declare-var FH7P (Array Int Int))
(declare-var FH8P Int)
(declare-var FH9P Int)
(declare-var i1 Int)
(declare-rel inv1 ((Array Int  Int ) (Array Int  Int ) (Array Int  Int ) Int Int )) 
(declare-rel inv2 ((Array Int  Int ) (Array Int  Int ) (Array Int  Int ) Int Int )) 
(declare-rel fail())

(rule (=> (and (= 0 FH8P) (= FH0 FH5P) (= FH4 FH9P) (> FH4 0) (= FH1 FH6P) (= FH2 FH7P) (or (exists ((i1 Int)) (and (< 0 i1) (>= i1 0) (< i1 FH4) (distinct (+ (select FH0 i1) (select FH1 i1)) 0))) (exists ((i1 Int)) (and (< 0 i1) (>= i1 0) (< i1 FH4) (distinct (+ (select FH0 i1) (- (select FH1 i1))) 0))))) (inv2 FH5P FH6P FH7P FH8P FH9P)))
(rule (=> (and (= FH9 FH9P) (< FH8 FH9) (= FH8P (+ FH8 1)) (= FH5 FH5P) (= (store FH7 FH8 (+ (select FH5 FH8) (select FH6 FH8))) FH7P) (= FH6 FH6P) (inv2 FH5 FH6 FH7 FH8 FH9)) (inv2 FH5P FH6P FH7P FH8P FH9P)))
(rule (=> (and (= FH9 FH9P) (< FH8 FH9) (= FH8P (+ FH8 1)) (= FH5 FH5P) (= FH6 FH6P) (= (store FH7 FH8 (+ (select FH5 FH8) (- (select FH6 FH8)))) FH7P) (inv2 FH5 FH6 FH7 FH8 FH9)) (inv2 FH5P FH6P FH7P FH8P FH9P)))
(rule (=> (and (>= FH8 FH9) (inv2 FH5 FH6 FH7 FH8 FH9) (forall ((i1 Int)) (or (>= 0 i1) (>= i1 FH9) (= (select FH7 i1) 0)))) fail))
(query fail)

